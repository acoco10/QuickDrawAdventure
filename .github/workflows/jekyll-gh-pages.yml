# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Optional) Add Linting Step
      # Requires installing markdownlint-cli, e.g., via npm
      # You might need to run `npm install -g markdownlint-cli` or use a dedicated action
      # Example using a dedicated action (simpler):
      - name: Lint Markdown # Checks all markdown files in the repo
        uses: avto-dev/markdown-lint@v1
        with:
          # Optional: specify config file, rules, globs, etc.
          # config: '.markdownlint.yaml'
          args: '.' # Lint all files from the root

      - name: Setup Pages
        id: pages # Added id to potentially reference outputs later if needed
        uses: actions/configure-pages@v5

      # This action handles Ruby setup, Gem installation (using Gemfile.lock for caching),
      # and Jekyll build (setting JEKYLL_ENV=production by default).
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./ # Default source location
          destination: ./_site # Default build destination

      - name: Upload artifact
        # Automatically uploads the built site from './_site'
        uses: actions/upload-pages-artifact@v3
        # No need to specify 'path' if using default './_site' destination

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # Ensures the build job succeeded
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # This action automatically downloads the artifact uploaded by
        # 'upload-pages-artifact' and deploys it.
